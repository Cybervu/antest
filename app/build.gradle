buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    flavorDimensions 'environment', 'vendor'
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.home.vod"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    productFlavors {
        /*Structuring Default flavour with dimension*/
        defaultFlavor {
            dimension 'vendor'
            applicationId 'com.release.muvisdk'
            minSdkVersion 15
            targetSdkVersion 23
            versionCode 2
            versionName "1.01"
            testInstrumentationRunner "android.support.testR.runner.AndroidJUnitRunner"
            //buildConfigField "String", "AUTH_TOKEN", "\"a010d1cef24104ca628a54e3246a8e43\""
            buildConfigField "String", "AUTH_TOKEN", "\"25e74a5c88d19c4b57c8138bf47abdf7\""//mob
            //  buildConfigField "String", "AUTH_TOKEN", "\"d2d529d95240ed416ead6684bd888c0f\""//idogic test
        }
        defaultFlavor_staging_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://www.muvi.com/rest/\""
        }
        defaultFlavor_Prod_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://www.muvi.com/rest/\""
        }
        /*Structuring vishwamtv flavour with dimension*/
        vishwamtv {
            dimension 'vendor'
            applicationId 'com.release.vishwamtv'
            minSdkVersion 15
            targetSdkVersion 23
            versionCode 1
            versionName "1.0"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            buildConfigField "String", "AUTH_TOKEN", "\"e8ae05a2ef3fd0c6688952c8f7557823\""
        }
        vishwamtv_staging_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://www.muvi.com/rest/\""
        }
        vishwamtv_Prod_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://www.muvi.com/rest/\""
        }
        /*Structuring newthoughtchannel flavour with dimension*/
        newthoughtchannel {
            dimension 'vendor'
            applicationId "com.release.newthoughtchannel"
            minSdkVersion 15
            targetSdkVersion 23
            versionCode 1
            versionName "1.0"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            buildConfigField "String", "AUTH_TOKEN", "\"a010d1cef24104ca628a54e3246a8e43\""
            // buildConfigField "String", "AUTH_TOKEN", "\"5e478efeab5dae14ea960b251f08b491\""//mob
            // buildConfigField "String", "AUTH_TOKEN", "\"6a9c6e9bfeee69e63d4bab668c01dc0a\""
           // buildConfigField "String", "AUTH_TOKEN", "\"25e74a5c88d19c4b57c8138bf47abdf7\""
        }
        newthoughtchannel_staging_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://www.muvi.com/rest/\""
        }
        newthoughtchannel_Prod_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://www.muvi.com/rest/\""
        }
        /*Structuring aatto flavour with dimension*/
        aatto {
            dimension 'vendor'
            minSdkVersion 15
            applicationId 'com.release.aatto'
            targetSdkVersion 23
            testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
            versionCode 1
            versionName '1.0'
            buildConfigField "String", "AUTH_TOKEN", "\"4298851905443517c9f161e6b0471969\""
//            buildConfigField "String", "AUTH_TOKEN", "\"25e74a5c88d19c4b57c8138bf47abdf7\""
        }
        aatto_staging_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"http://www.muvi.com/rest/\""
        }
        aatto_Prod_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://www.muvi.com/rest/\""
        }
        digiOsmosis {
            dimension 'vendor'
            minSdkVersion 21
            applicationId 'com.release.digiosmosis'
            targetSdkVersion 23
            testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
            versionCode 1
            versionName '1.0'
            buildConfigField "String", "AUTH_TOKEN", "\"8c6e6162f22f3f43a6d88efc1a64cd18\""
            // buildConfigField "String", "AUTH_TOKEN", "\"25e74a5c88d19c4b57c8138bf47abdf7\""
        }
        digiOsmosis_staging_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"http://www.idogic.com/rest/\""
        }
        digiOsmosis_Prod_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://www.muvi.com/rest/\""
        }
        /*Structuring lumiere flavour with dimension*/
        lumiere {
            dimension 'vendor'
            minSdkVersion 21
            applicationId 'com.release.teststreamingapp'
            versionCode 11
            targetSdkVersion 25
            versionName '2.2.4'
            testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
            buildConfigField "String", "AUTH_TOKEN", "\"7a4d24bf8f28432dd3e3d75980a6f7c3\""
        }
        lumiere_staging_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://sonydadc.muvi.com/rest/\""
        }
        lumiere_Prod_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://sonydadc.muvi.com/rest/\""
        }
        /*Structuring Matas flavour with dimension*/
        matas {
            dimension 'vendor'
            minSdkVersion 21
            applicationId 'com.release.matas'
            versionCode 11
            targetSdkVersion 25
            versionName '1.0.1'
            testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
            buildConfigField "String", "AUTH_TOKEN", "\"0c2236eee851357d1fecc01fbba128c5\""
            //buildConfigField "String", "AUTH_TOKEN", "\"25e74a5c88d19c4b57c8138bf47abdf7\""
        }
        matas_staging_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://sonydadc.muvi.com/rest/\""
        }
        matas_Prod_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://sonydadc.muvi.com/rest/\""
        }
        /*Structuring Monetizer flavour with dimension*/
        monetizer {
            dimension 'vendor'
            minSdkVersion 21
            applicationId 'com.release.monetiser'
            versionCode 1
            targetSdkVersion 25
            versionName "1.0"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            buildConfigField "String", "AUTH_TOKEN", "\"d3c3848c41852daea8f707a7b1b14230\""
        }
        monetizer_staging_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://sonydadc.muvi.com/rest/\""
        }
        monetizer_Prod_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://sonydadc.muvi.com/rest/\""
        }
        /*Structuring plushnights flavour with dimension*/
        plusnights {
            dimension 'vendor'
            minSdkVersion 21
            applicationId 'com.release.plusnights'
            versionCode 1
            targetSdkVersion 25
            versionName "1.0.0"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            buildConfigField "String", "AUTH_TOKEN", "\"0831fbbacf89caf9d32aca43e21665b8\""
//            buildConfigField "String", "AUTH_TOKEN", "\"7a4d24bf8f28432dd3e3d75980a6f7c3\""
            // buildConfigField "String", "AUTH_TOKEN", "\"a5bdd73811b3ff6bd7a5f9f0e86af23d\""
        }
        plusnights_staging_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://sonydadc.muvi.com/rest/\""
        }
        plusnights_Prod_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://sonydadc.muvi.com/rest/\""
        }
        metrox {
            dimension 'vendor'
            minSdkVersion 21
            applicationId 'com.release.metrox'
            versionCode 1
            targetSdkVersion 25
            versionName "1.0"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            buildConfigField "String", "AUTH_TOKEN", "\"97082c300cc83c4f0234f61ae50ff336\""
//            buildConfigField "String", "AUTH_TOKEN", "\"7a4d24bf8f28432dd3e3d75980a6f7c3\""
        }
        metrox_staging_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://www.muvi.com/rest/\""
        }
        metrox_Prod_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://www.muvi.com/rest/\""
        }

        wuntustreaming {
            dimension 'vendor'
            minSdkVersion 21
            applicationId 'com.release.wuntustreaming'
            versionCode 1
            targetSdkVersion 25
            versionName "1.0"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            buildConfigField "String", "AUTH_TOKEN", "\"a5bdd73811b3ff6bd7a5f9f0e86af23d\""
        }
        wuntustreaming_staging_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://sonydadc.muvi.com/rest/\""
        }
        wuntustreaming_Prod_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://sonydadc.muvi.com/rest/\""
        }
        cmax {
            dimension 'vendor'
            minSdkVersion 21
            applicationId 'com.release.cmaxtv'
            versionCode 1
            targetSdkVersion 25
            versionName "1.0"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            buildConfigField "String", "AUTH_TOKEN", "\"a2478e71219f606cb5b7a3d3f7a35fe8\""
        }
        cmax_staging_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://www.muvi.com/rest/\""
        }
        cmax_Prod_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://www.muvi.com/rest/\""
        }

        muvinow {
            dimension 'vendor'
            minSdkVersion 21
            applicationId 'com.release.quickflix'
            versionCode 1
            targetSdkVersion 25
            versionName "1.0"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            buildConfigField "String", "AUTH_TOKEN", "\"53e22fe21c5225d3b7f047b26987218f\""
        }
        muvinow_staging_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://adminquickflix.muvi.com/rest/\""
        }
        muvinow_Prod_ {
            dimension 'environment'
            buildConfigField "String", "SERVICE_BASE_PATH", "\"https://adminquickflix.muvi.com/rest/\""
        }

    }
}


android.variantFilter { variant ->

    def environment = variant.getFlavors().get(0).name
    def vendor = variant.getFlavors().get(1).name
    def isRelease = variant.buildType.name.equals('release')
    def isDebug = variant.buildType.name.equals('debug')

/**
 * Filtered defaultFlavor variant.
 */
    /*Avoid defaultFlavor to vishwamtv combination for both debug & release mode.*/

    if (vendor.equals('defaultFlavor') && environment.equals('vishwamtv_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('vishwamtv_staging_') && isDebug) {
        variant.setIgnore(true)
    }

    if (vendor.equals('defaultFlavor') && environment.equals('vishwamtv_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('vishwamtv_Prod_') && isDebug) {
        variant.setIgnore(true)
    }

    /*Avoid defaultFlavor to newthoughtchannel combination for both debug & release mode.*/

    if (vendor.equals('defaultFlavor') && environment.equals('newthoughtchannel_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('newthoughtchannel_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('newthoughtchannel_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('newthoughtchannel_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid defaultFlavor to aatto combination for both debug & release mode.*/

    if (vendor.equals('defaultFlavor') && environment.equals('aatto_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('aatto_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('aatto_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('aatto_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid defaultFlavor to digiosmosis combination for both debug & release mode.*/

    if (vendor.equals('defaultFlavor') && environment.equals('digiOsmosis_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('digiOsmosis_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('digiOsmosis_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('digiOsmosis_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid defaultFlavor to Lumiere combination for both debug & release mode.*/

    if (vendor.equals('defaultFlavor') && environment.equals('lumiere_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('lumiere_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('lumiere_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('lumiere_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid defaultFlavor to Matas combination for both debug & release mode.*/

    if (vendor.equals('defaultFlavor') && environment.equals('matas_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('matas_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('matas_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('matas_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid defaultFlavor to Monetizer combination for both debug & release mode.*/

    if (vendor.equals('defaultFlavor') && environment.equals('monetizer_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('monetizer_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('monetizer_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('monetizer_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid defaultFlavor to plusnights combination for both debug & release mode.*/

    if (vendor.equals('defaultFlavor') && environment.equals('plusnights_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('plusnights_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('plusnights_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('plusnights_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid defaultFlavor to Metrox combination for both debug & release mode.*/

    if (vendor.equals('defaultFlavor') && environment.equals('metrox_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('metrox_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('metrox_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('metrox_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid defaultFlavor to wuntustreaming combination for both debug & release mode.*/

    if (vendor.equals('defaultFlavor') && environment.equals('wuntustreaming_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('wuntustreaming_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('wuntustreaming_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('wuntustreaming_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid defaultFlavor to cmax combination for both debug & release mode.*/

    if (vendor.equals('defaultFlavor') && environment.equals('cmax_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('cmax_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('cmax_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('cmax_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid defaultFlavor to muvinow combination for both debug & release mode.*/

    if (vendor.equals('defaultFlavor') && environment.equals('muvinow_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('muvinow_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('muvinow_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('defaultFlavor') && environment.equals('muvinow_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /**
     * Filtered vishwamtv variant.
     */
    if (vendor.equals('vishwamtv') && environment.equals('defaultFlavor_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('defaultFlavor_staging_') && isDebug) {
        variant.setIgnore(true)
    }

    if (vendor.equals('vishwamtv') && environment.equals('defaultFlavor_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('defaultFlavor_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('newthoughtchannel_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('newthoughtchannel_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('newthoughtchannel_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('newthoughtchannel_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('aatto_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('aatto_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('aatto_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('aatto_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('vishwamtv') && environment.equals('digiOsmosis_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('digiOsmosis_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('digiOsmosis_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('digiOsmosis_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid defaultFlavor to Lumiere combination for both debug & release mode.*/

    if (vendor.equals('vishwamtv') && environment.equals('lumiere_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('lumiere_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('lumiere_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('lumiere_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid defaultFlavor to Matas combination for both debug & release mode.*/

    if (vendor.equals('vishwamtv') && environment.equals('matas_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('matas_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('matas_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('matas_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid defaultFlavor to Monetizer combination for both debug & release mode.*/

    if (vendor.equals('vishwamtv') && environment.equals('monetizer_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('monetizer_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('monetizer_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('monetizer_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid defaultFlavor to plusnights combination for both debug & release mode.*/

    if (vendor.equals('vishwamtv') && environment.equals('plusnights_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('plusnights_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('plusnights_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('plusnights_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

/*Avoid vishwam to metrox combination for both debug & release mode.*/

    if (vendor.equals('vishwamtv') && environment.equals('metrox_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('metrox_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('metrox_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('metrox_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid vishwamtv to wuntustreaming combination for both debug & release mode.*/

    if (vendor.equals('vishwamtv') && environment.equals('wuntustreaming_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('wuntustreaming_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('wuntustreaming_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('wuntustreaming_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid vishwam to cmax combination for both debug & release mode.*/

    if (vendor.equals('vishwamtv') && environment.equals('cmax_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('cmax_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('cmax_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('cmax_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid vishwamtv to muvinow combination for both debug & release mode.*/

    if (vendor.equals('vishwamtv') && environment.equals('muvinow_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('muvinow_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('muvinow_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('vishwamtv') && environment.equals('muvinow_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /**
     * Filtered newthoughtchannel variant.
     */
    if (vendor.equals('newthoughtchannel') && environment.equals('defaultFlavor_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('defaultFlavor_staging_') && isDebug) {
        variant.setIgnore(true)
    }

    if (vendor.equals('newthoughtchannel') && environment.equals('defaultFlavor_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('defaultFlavor_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('vishwamtv_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('vishwamtv_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('vishwamtv_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('vishwamtv_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('aatto_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('aatto_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('aatto_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('aatto_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('newthoughtchannel') && environment.equals('digiOsmosis_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('digiOsmosis_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('digiOsmosis_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('digiOsmosis_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('newthoughtchannel') && environment.equals('lumiere_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('lumiere_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('lumiere_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('lumiere_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid newthoughtchannel to Matas combination for both debug & release mode.*/

    if (vendor.equals('newthoughtchannel') && environment.equals('matas_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('matas_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('matas_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('matas_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid newthoughtchannel to Monetizer combination for both debug & release mode.*/

    if (vendor.equals('newthoughtchannel') && environment.equals('monetizer_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('monetizer_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('monetizer_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('monetizer_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid newthoughtchannel to Monetizer combination for both debug & release mode.*/

    if (vendor.equals('newthoughtchannel') && environment.equals('plusnights_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('plusnights_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('plusnights_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('plusnights_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

/*Avoid newthoughtchannel to metrox combination for both debug & release mode.*/

    if (vendor.equals('newthoughtchannel') && environment.equals('metrox_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('metrox_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('metrox_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('metrox_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid newthoughtchannel to wuntustreaming combination for both debug & release mode.*/

    if (vendor.equals('newthoughtchannel') && environment.equals('wuntustreaming_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('wuntustreaming_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('wuntustreaming_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('wuntustreaming_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid newthoughtchannel to cmax combination for both debug & release mode.*/

    if (vendor.equals('newthoughtchannel') && environment.equals('cmax_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('cmax_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('cmax_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('cmax_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid newthoughtchannel to muvinow combination for both debug & release mode.*/

    if (vendor.equals('newthoughtchannel') && environment.equals('muvinow_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('muvinow_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('muvinow_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('newthoughtchannel') && environment.equals('muvinow_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /**
     * Filtered aattoo variant.
     */
    if (vendor.equals('aatto') && environment.equals('defaultFlavor_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('defaultFlavor_staging_') && isDebug) {
        variant.setIgnore(true)
    }

    if (vendor.equals('aatto') && environment.equals('defaultFlavor_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('defaultFlavor_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('vishwamtv_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('vishwamtv_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('vishwamtv_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('vishwamtv_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('newthoughtchannel_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('newthoughtchannel_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('newthoughtchannel_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('newthoughtchannel_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('digiOsmosis_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('digiOsmosis_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('digiOsmosis_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('digiOsmosis_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('lumiere_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('lumiere_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('lumiere_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('lumiere_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid aatto to Matas combination for both debug & release mode.*/

    if (vendor.equals('aatto') && environment.equals('matas_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('matas_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('matas_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('matas_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid aatto to Monetizer combination for both debug & release mode.*/

    if (vendor.equals('aatto') && environment.equals('monetizer_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('monetizer_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('monetizer_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('monetizer_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid aatto to Plushnights combination for both debug & release mode.*/

    if (vendor.equals('aatto') && environment.equals('plusnights_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('plusnights_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('plusnights_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('plusnights_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

/*Avoid aatto to metrox combination for both debug & release mode.*/

    if (vendor.equals('aatto') && environment.equals('metrox_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('metrox_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('metrox_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('metrox_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid aatto to wuntustreaming combination for both debug & release mode.*/

    if (vendor.equals('aatto') && environment.equals('wuntustreaming_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('wuntustreaming_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('wuntustreaming_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('wuntustreaming_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid aatto to metrox combination for both debug & release mode.*/

    if (vendor.equals('aatto') && environment.equals('cmax_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('cmax_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('cmax_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('cmax_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid aatto to muvinow combination for both debug & release mode.*/

    if (vendor.equals('aatto') && environment.equals('muvinow_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('muvinow_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('muvinow_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('aatto') && environment.equals('muvinow_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /**
     * Filtered digiosmosis variant.
     */
    if (vendor.equals('digiOsmosis') && environment.equals('defaultFlavor_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('defaultFlavor_staging_') && isDebug) {
        variant.setIgnore(true)
    }

    if (vendor.equals('digiOsmosis') && environment.equals('defaultFlavor_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('defaultFlavor_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('vishwamtv_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('vishwamtv_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('vishwamtv_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('vishwamtv_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('newthoughtchannel_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('newthoughtchannel_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('newthoughtchannel_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('newthoughtchannel_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('aatto_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('aatto_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('aatto_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('aatto_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('lumiere_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('lumiere_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('lumiere_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('lumiere_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid aatto to Matas combination for both debug & release mode.*/

    if (vendor.equals('digiOsmosis') && environment.equals('matas_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('matas_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('matas_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('matas_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid aatto to Monetizer combination for both debug & release mode.*/

    if (vendor.equals('digiOsmosis') && environment.equals('monetizer_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('monetizer_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('monetizer_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('monetizer_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid aatto to Plusnights combination for both debug & release mode.*/

    if (vendor.equals('digiOsmosis') && environment.equals('plusnights_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('plusnights_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('plusnights_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('plusnights_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

/*Avoid digiosmosis to metrox combination for both debug & release mode.*/

    if (vendor.equals('digiOsmosis') && environment.equals('metrox_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('metrox_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('metrox_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('metrox_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid digiOsmosis to wuntustreaming combination for both debug & release mode.*/

    if (vendor.equals('digiOsmosis') && environment.equals('wuntustreaming_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('wuntustreaming_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('wuntustreaming_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('wuntustreaming_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid digiosmosis to metrox combination for both debug & release mode.*/

    if (vendor.equals('digiOsmosis') && environment.equals('cmax_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('cmax_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('cmax_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('cmax_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid digiOsmosis to muvinow combination for both debug & release mode.*/

    if (vendor.equals('digiOsmosis') && environment.equals('muvinow_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('muvinow_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('muvinow_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('digiOsmosis') && environment.equals('muvinow_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /**
     * Filtered Lumiere variant.
     */
    if (vendor.equals('lumiere') && environment.equals('defaultFlavor_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('defaultFlavor_staging_') && isDebug) {
        variant.setIgnore(true)
    }

    if (vendor.equals('lumiere') && environment.equals('defaultFlavor_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('defaultFlavor_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('vishwamtv_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('vishwamtv_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('vishwamtv_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('vishwamtv_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('newthoughtchannel_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('newthoughtchannel_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('newthoughtchannel_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('newthoughtchannel_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('aatto_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('aatto_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('aatto_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('aatto_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('digiOsmosis_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('digiOsmosis_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('digiOsmosis_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('digiOsmosis_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid lumiere to Matas combination for both debug & release mode.*/

    if (vendor.equals('lumiere') && environment.equals('matas_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('matas_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('matas_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('matas_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid lumiere to Monetizer combination for both debug & release mode.*/

    if (vendor.equals('lumiere') && environment.equals('monetizer_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('monetizer_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('monetizer_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('monetizer_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid lumiere to Plushnights combination for both debug & release mode.*/

    if (vendor.equals('lumiere') && environment.equals('plusnights_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('plusnights_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('plusnights_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('plusnights_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid lumiere to metrox combination for both debug & release mode.*/

    if (vendor.equals('lumiere') && environment.equals('metrox_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('metrox_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('metrox_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('metrox_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid lumiere to wuntustreaming_staging_ combination for both debug & release mode.*/

    if (vendor.equals('lumiere') && environment.equals('wuntustreaming_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('wuntustreaming_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('wuntustreaming_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('wuntustreaming_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid lumiere to cmax combination for both debug & release mode.*/

    if (vendor.equals('lumiere') && environment.equals('cmax_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('cmax_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('cmax_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('cmax_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid lumiere to muvinow combination for both debug & release mode.*/

    if (vendor.equals('lumiere') && environment.equals('muvinow_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('muvinow_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('muvinow_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('lumiere') && environment.equals('muvinow_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /**
     * Filtered Matas variant.
     */
    if (vendor.equals('matas') && environment.equals('defaultFlavor_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('defaultFlavor_staging_') && isDebug) {
        variant.setIgnore(true)
    }

    if (vendor.equals('matas') && environment.equals('defaultFlavor_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('defaultFlavor_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('vishwamtv_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('vishwamtv_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('vishwamtv_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('vishwamtv_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('newthoughtchannel_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('newthoughtchannel_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('newthoughtchannel_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('newthoughtchannel_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('aatto_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('aatto_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('aatto_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('aatto_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('digiOsmosis_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('digiOsmosis_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('digiOsmosis_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('digiOsmosis_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('matas') && environment.equals('lumiere_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('lumiere_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('lumiere_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('lumiere_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('matas') && environment.equals('monetizer_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('monetizer_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('monetizer_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('monetizer_Prod_') && isRelease) {
        variant.setIgnore(true)
    }


    if (vendor.equals('matas') && environment.equals('plusnights_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('plusnights_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('plusnights_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('plusnights_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid matas to metrox combination for both debug & release mode.*/

    if (vendor.equals('matas') && environment.equals('metrox_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('metrox_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('metrox_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('metrox_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid matas to wuntustreaming_staging_ combination for both debug & release mode.*/

    if (vendor.equals('matas') && environment.equals('wuntustreaming_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('wuntustreaming_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('wuntustreaming_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('wuntustreaming_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid matas to cmax combination for both debug & release mode.*/

    if (vendor.equals('matas') && environment.equals('cmax_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('cmax_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('cmax_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('cmax_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid matas to muvinow combination for both debug & release mode.*/

    if (vendor.equals('matas') && environment.equals('muvinow_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('muvinow_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('muvinow_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('matas') && environment.equals('muvinow_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

/**
 * Filtered Monetizer variant.
 */
    if (vendor.equals('monetizer') && environment.equals('defaultFlavor_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('defaultFlavor_staging_') && isDebug) {
        variant.setIgnore(true)
    }

    if (vendor.equals('monetizer') && environment.equals('defaultFlavor_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('defaultFlavor_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('vishwamtv_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('vishwamtv_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('vishwamtv_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('vishwamtv_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('newthoughtchannel_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('newthoughtchannel_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('newthoughtchannel_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('newthoughtchannel_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('aatto_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('aatto_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('aatto_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('aatto_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('digiOsmosis_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('digiOsmosis_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('digiOsmosis_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('digiOsmosis_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('monetizer') && environment.equals('lumiere_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('lumiere_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('lumiere_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('lumiere_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('monetizer') && environment.equals('matas_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('matas_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('matas_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('matas_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('monetizer') && environment.equals('plusnights_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('plusnights_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('plusnights_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('plusnights_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

/*Avoid monetizer to metrox combination for both debug & release mode.*/

    if (vendor.equals('monetizer') && environment.equals('metrox_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('metrox_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('metrox_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('metrox_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid monetizer to wuntustreaming_staging_ combination for both debug & release mode.*/

    if (vendor.equals('monetizer') && environment.equals('wuntustreaming_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('wuntustreaming_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('wuntustreaming_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('wuntustreaming_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid monetizer to cmax combination for both debug & release mode.*/

    if (vendor.equals('monetizer') && environment.equals('cmax_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('cmax_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('cmax_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('cmax_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid monetizer to muvinow combination for both debug & release mode.*/

    if (vendor.equals('monetizer') && environment.equals('muvinow_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('muvinow_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('muvinow_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('monetizer') && environment.equals('muvinow_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

/**
 * Filtered Plushnights variant.
 */
    if (vendor.equals('plusnights') && environment.equals('defaultFlavor_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('defaultFlavor_staging_') && isDebug) {
        variant.setIgnore(true)
    }

    if (vendor.equals('plusnights') && environment.equals('defaultFlavor_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('defaultFlavor_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('vishwamtv_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('vishwamtv_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('vishwamtv_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('vishwamtv_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('newthoughtchannel_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('newthoughtchannel_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('newthoughtchannel_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('newthoughtchannel_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('aatto_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('aatto_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('aatto_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('aatto_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('digiOsmosis_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('digiOsmosis_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('digiOsmosis_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('digiOsmosis_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('plusnights') && environment.equals('lumiere_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('lumiere_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('lumiere_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('lumiere_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('plusnights') && environment.equals('matas_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('matas_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('matas_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('matas_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('plusnights') && environment.equals('monetizer_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('monetizer_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('monetizer_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('monetizer_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid plusnights to metrox combination for both debug & release mode.*/

    if (vendor.equals('plusnights') && environment.equals('metrox_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('metrox_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('metrox_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('metrox_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid plusnights to wuntustreaming_staging_ combination for both debug & release mode.*/

    if (vendor.equals('plusnights') && environment.equals('wuntustreaming_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('wuntustreaming_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('wuntustreaming_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('wuntustreaming_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid plusnights to cmax combination for both debug & release mode.*/

    if (vendor.equals('plusnights') && environment.equals('cmax_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('cmax_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('cmax_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('cmax_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid plusnights to muvinow combination for both debug & release mode.*/

    if (vendor.equals('plusnights') && environment.equals('muvinow_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('muvinow_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('muvinow_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('plusnights') && environment.equals('muvinow_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

/**
 * Filtered metrox variant.
 */
    if (vendor.equals('metrox') && environment.equals('defaultFlavor_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('defaultFlavor_staging_') && isDebug) {
        variant.setIgnore(true)
    }

    if (vendor.equals('metrox') && environment.equals('defaultFlavor_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('defaultFlavor_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('vishwamtv_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('vishwamtv_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('vishwamtv_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('vishwamtv_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('newthoughtchannel_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('newthoughtchannel_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('newthoughtchannel_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('newthoughtchannel_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('aatto_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('aatto_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('aatto_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('aatto_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('digiOsmosis_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('digiOsmosis_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('digiOsmosis_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('digiOsmosis_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('metrox') && environment.equals('lumiere_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('lumiere_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('lumiere_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('lumiere_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('metrox') && environment.equals('matas_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('matas_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('matas_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('matas_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('metrox') && environment.equals('monetizer_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('monetizer_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('monetizer_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('monetizer_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('metrox') && environment.equals('plusnights_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('plusnights_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('plusnights_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('plusnights_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid metrox to wuntustreaming_staging_ combination for both debug & release mode.*/

    if (vendor.equals('metrox') && environment.equals('wuntustreaming_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('wuntustreaming_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('wuntustreaming_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('wuntustreaming_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /**
     * Filtered wuntustreaming variant.
     */
    if (vendor.equals('wuntustreaming') && environment.equals('defaultFlavor_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('defaultFlavor_staging_') && isDebug) {
        variant.setIgnore(true)
    }

    if (vendor.equals('wuntustreaming') && environment.equals('defaultFlavor_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('defaultFlavor_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('vishwamtv_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('vishwamtv_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('vishwamtv_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('vishwamtv_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('newthoughtchannel_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('newthoughtchannel_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('newthoughtchannel_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('newthoughtchannel_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('aatto_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('aatto_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('aatto_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('aatto_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('digiOsmosis_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('digiOsmosis_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('digiOsmosis_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('digiOsmosis_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('wuntustreaming') && environment.equals('lumiere_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('lumiere_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('lumiere_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('lumiere_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('wuntustreaming') && environment.equals('matas_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('matas_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('matas_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('matas_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('wuntustreaming') && environment.equals('plusnights_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('plusnights_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('plusnights_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('plusnights_Prod_') && isRelease) {
        variant.setIgnore(true)
    }


    if (vendor.equals('wuntustreaming') && environment.equals('metrox_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('metrox_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('metrox_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('metrox_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('cmax_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('cmax_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('cmax_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('cmax_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

/*Avoid metrox to muvinow combination for both debug & release mode.*/

    if (vendor.equals('wuntustreaming') && environment.equals('muvinow_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('muvinow_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('muvinow_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('wuntustreaming') && environment.equals('muvinow_Prod_') && isRelease) {
        variant.setIgnore(true)
    }


    if (vendor.equals('metrox') && environment.equals('cmax_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('cmax_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('cmax_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('cmax_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

/*Avoid metrox to muvinow combination for both debug & release mode.*/

    if (vendor.equals('metrox') && environment.equals('muvinow_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('muvinow_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('muvinow_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('metrox') && environment.equals('muvinow_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

/**
 * Filtered cmax variant.
 */
    if (vendor.equals('cmax') && environment.equals('defaultFlavor_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('defaultFlavor_staging_') && isDebug) {
        variant.setIgnore(true)
    }

    if (vendor.equals('cmax') && environment.equals('defaultFlavor_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('defaultFlavor_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('vishwamtv_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('vishwamtv_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('vishwamtv_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('vishwamtv_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('newthoughtchannel_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('newthoughtchannel_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('newthoughtchannel_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('newthoughtchannel_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('aatto_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('aatto_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('aatto_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('aatto_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('digiOsmosis_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('digiOsmosis_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('digiOsmosis_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('digiOsmosis_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('cmax') && environment.equals('lumiere_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('lumiere_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('lumiere_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('lumiere_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('cmax') && environment.equals('matas_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('matas_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('matas_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('matas_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('cmax') && environment.equals('monetizer_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('monetizer_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('monetizer_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('monetizer_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('cmax') && environment.equals('plusnights_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('plusnights_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('plusnights_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('plusnights_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid cmax to muvinow combination for both debug & release mode.*/

    if (vendor.equals('cmax') && environment.equals('muvinow_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('muvinow_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('muvinow_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('muvinow_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid cmax to wuntustreaming_staging_ combination for both debug & release mode.*/

    if (vendor.equals('cmax') && environment.equals('wuntustreaming_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('wuntustreaming_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('wuntustreaming_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('cmax') && environment.equals('wuntustreaming_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

/**
 * Filtered muvinow variant.
 */
    if (vendor.equals('muvinow') && environment.equals('defaultFlavor_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('defaultFlavor_staging_') && isDebug) {
        variant.setIgnore(true)
    }

    if (vendor.equals('muvinow') && environment.equals('defaultFlavor_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('defaultFlavor_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('vishwamtv_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('vishwamtv_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('vishwamtv_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('vishwamtv_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('newthoughtchannel_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('newthoughtchannel_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('newthoughtchannel_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('newthoughtchannel_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('aatto_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('aatto_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('aatto_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('aatto_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('digiOsmosis_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('digiOsmosis_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('digiOsmosis_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('digiOsmosis_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('muvinow') && environment.equals('lumiere_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('lumiere_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('lumiere_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('lumiere_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('muvinow') && environment.equals('matas_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('matas_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('matas_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('matas_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('muvinow') && environment.equals('monetizer_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('monetizer_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('monetizer_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('monetizer_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    if (vendor.equals('muvinow') && environment.equals('plusnights_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('plusnights_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('plusnights_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('plusnights_Prod_') && isRelease) {
        variant.setIgnore(true)
    }

    /*Avoid muvinow to muvinow combination for both debug & release mode.*/

    if (vendor.equals('muvinow') && environment.equals('cmax_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('cmax_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('cmax_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('cmax_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
    /*Avoid muvinow to wuntustreaming_staging_ combination for both debug & release mode.*/

    if (vendor.equals('muvinow') && environment.equals('wuntustreaming_staging_') && isRelease) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('wuntustreaming_staging_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('wuntustreaming_Prod_') && isDebug) {
        variant.setIgnore(true)
    }
    if (vendor.equals('muvinow') && environment.equals('wuntustreaming_Prod_') && isRelease) {
        variant.setIgnore(true)
    }
}


android {
    useLibrary 'org.apache.http.legacy'
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }
    // compile 'com.muvi:APISDK:v1.02'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }
    compile project(':apisdk')
    compile files('libs/wasabi.jar')
    compile files('libs/YouTubeAndroidPlayerApi.jar')
    compile('com.spotxchange:spotx-sdk-android:3.1.+') {
        transitive = false
    }
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.android.support:appcompat-v7:25.3.1'
    // compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.pkmmte.view:circularimageview:1.1'
    compile 'com.squareup.picasso:picasso:2.5.0'
    compile 'io.card:android-sdk:5.4.0'
    compile 'com.daimajia.slider:library:1.1.5@aar'
    compile 'com.devbrackets.android:exomedia:3.0.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.google.android.gms:play-services-cast-framework:9.4.0'
    compile 'com.googlecode.android-query:android-query:0.25.9'
    compile 'com.android.support:mediarouter-v7:25.3.1'
    compile 'com.facebook.android:facebook-android-sdk:4.0.0'
    compile 'com.google.firebase:firebase-messaging:9.4.0'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support:palette-v7:25.3.1'
    compile 'com.google.android.gms:play-services-auth:9.4.0'
    compile 'com.google.ads.interactivemedia.v3:interactivemedia:3.6.0'
}

task copyJniLibs(type: Copy) {
    from 'libs/armeabi'
    into 'src/main/jniLibs/armeabi'
}
tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(copyJniLibs)
}
clean.dependsOn 'cleanCopyJniLibs'

apply plugin: 'com.google.gms.google-services'
