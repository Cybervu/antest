apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

group='com.github.Muvidevelopers'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

android {
    useLibrary 'org.apache.http.legacy'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //noinspection GradleCompatible
    compile 'com.android.support:appcompat-v7:27.1.0'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    // Kushal

    compile('com.spotxchange:spotx-sdk-android:3.1.+') {
        transitive = false
    }
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.daimajia.slider:library:1.1.5@aar'
    compile 'com.devbrackets.android:exomedia:3.0.1'
    compile 'com.google.android.gms:play-services-cast-framework:12.0.1'
    compile 'com.googlecode.android-query:android-query:0.25.9'
    compile 'com.android.support:recyclerview-v7:27.1.0'
    testCompile 'junit:junit:4.12'
    compile files('libs/wasabi.jar')
    compile files('libs/YouTubeAndroidPlayerApi.jar')

    compile 'com.google.ads.interactivemedia.v3:interactivemedia:3.7.4'

    // compile files('libs/YouTubeAndroidPlayerApi.jar')

    testCompile 'junit:junit:4.12'
    compile project(path: ':app' , configuration: 'default')
}


// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
